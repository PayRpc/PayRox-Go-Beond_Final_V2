'use strict';
Object.defineProperty(exports, '__esModule', { value: true });
exports.Strings__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'length',
                type: 'uint256',
            },
        ],
        name: 'StringsInsufficientHexLength',
        type: 'error',
    },
    {
        inputs: [],
        name: 'StringsInvalidAddressFormat',
        type: 'error',
    },
    {
        inputs: [],
        name: 'StringsInvalidChar',
        type: 'error',
    },
];
const _bytecode = '0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220bf6c1ae1d3708fa06684ccbd35f7a7d47c3d32fd089cec2c8123b3b07555bad764736f6c634300081e0033';
const isSuperArgs = (xs) => xs.length > 1;
class Strings__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.Strings__factory = Strings__factory;
