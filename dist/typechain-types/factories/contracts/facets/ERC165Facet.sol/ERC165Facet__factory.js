'use strict';
Object.defineProperty(exports, '__esModule', { value: true });
exports.ERC165Facet__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080806040523460135760df908160188239f35b5f80fdfe608060405260043610156010575f80fd5b5f3560e01c6301ffc9a7146022575f80fd5b3460575760203660031901126057576004356001600160e01b031981168103605757604d602091605b565b6040519015158152f35b5f80fd5b6001600160e01b0319166301ffc9a760e01b811460a3575f527f591be81f15f35d8de1478a0d6658a8a057a6ddfe787f14b90117e5734820554260205260ff60405f20541690565b5060019056fea2646970667358221220ce8b8b8e7b6561e7398b8dbeb5594ec431fdb92c50166f6637be8a828ab4224664736f6c634300081e0033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC165Facet__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC165Facet__factory = ERC165Facet__factory;
