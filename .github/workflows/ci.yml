name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build, Hardhat tests, and Python smoke tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node dependencies
        run: |
          npm ci

      - name: Compile Solidity
        run: |
          npx hardhat compile

      - name: Run Hardhat tests
        run: |
          npx hardhat test --no-compile

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

      - name: Start services (docker compose)
        run: |
          # start the local stack declared in docker-compose.yml for smoke tests
          docker compose up -d --build
          echo "Waiting for API to become healthy..."
          for i in $(seq 1 30); do
            if curl -sSf http://localhost:8000/metrics >/dev/null 2>&1; then
              echo "API ready"
              break
            fi
            sleep 2
          done

      - name: Run Python smoke tests (pytest)
        run: |
          # run only the lightweight smoke tests introduced for /metrics and API health
          pytest -q -k test_api_smoke

      - name: Tear down services
        if: always()
        run: |
          docker compose down -v
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: "Install dependencies (temporary: legacy-peer-deps)"
      run: npm install --legacy-peer-deps

    - name: Lint
      run: npm run lint

    - name: Ensure dataset/cache paths are ignored
      run: |
        set -e
        if ! grep -qE '(^|/)datasets/' .gitignore; then
          echo "ERROR: 'datasets/' is not listed in .gitignore" >&2
          exit 1
        fi
        if ! grep -qE '(^|/)\.rag_cache/' .gitignore; then
          echo "ERROR: '.rag_cache/' is not listed in .gitignore" >&2
          exit 1
        fi

    - name: TypeScript typecheck
      run: npm run check:ts

    - name: Hardhat compile
      run: npx hardhat compile
    - name: Run tests
      run: npm test -- --ci --runInBand
    - name: Security audit (non-blocking)
      run: |
        set -e
        echo "Running production audit (ignoring dev deps)"
        npm audit --production --omit=dev || true
