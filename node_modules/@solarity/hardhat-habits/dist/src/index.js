"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInterfaceID = void 0;
const utils_1 = require("solidity-ast/utils");
async function getInterfaceID(contractName) {
    const hre = require("hardhat");
    const contractArtifact = await hre.artifacts.readArtifact(contractName);
    const buildInfo = await hre.artifacts.getBuildInfo(`${contractArtifact.sourceName}:${contractName}`);
    const sourceUnit = buildInfo.output.sources[contractArtifact.sourceName].ast;
    const contractNode = sourceUnit.nodes.find((node) => (0, utils_1.isNodeType)("ContractDefinition", node) && node.name === contractName);
    if (!contractNode) {
        throw new Error(`Contract ${contractName} not found in ${contractArtifact.sourceName}`);
    }
    const allFunctions = [...(0, utils_1.findAll)("FunctionDefinition", contractNode)];
    let interfaceID = 0n;
    for (const functionDef of allFunctions) {
        if (!functionDef.functionSelector) {
            continue;
        }
        interfaceID = interfaceID ^ BigInt(`0x${functionDef.functionSelector}`);
    }
    return "0x" + interfaceID.toString(16).padStart(8, "0");
}
exports.getInterfaceID = getInterfaceID;
//# sourceMappingURL=index.js.map